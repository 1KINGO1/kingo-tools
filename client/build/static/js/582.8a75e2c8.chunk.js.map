{"version":3,"file":"static/js/582.8a75e2c8.chunk.js","mappings":"uTAMMA,EAAqBC,EAAAA,GAAAA,IAAH,gFAMlBC,EAAiBD,EAAAA,GAAAA,IAAH,qWAKE,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,QAIxB,SAAAH,GAAK,OAAIA,EAAMI,UAAN,2CAAsDJ,EAAMK,QAA5D,YAAuEL,EAAMI,UAA7E,sHAUtBE,EAAiB,SAACN,GAE3B,IAAMO,GAAWC,EAAAA,EAAAA,MAMjB,OACI,UAACX,EAAD,YACI,SAACE,GAAD,kBAAoBC,GAApB,IAA2BS,QANd,WACjBF,GAASG,EAAAA,EAAAA,GAASV,EAAMK,eAMpB,SAACM,EAAA,EAAD,CAAMC,MAAO,CAACC,UAAW,SAAUC,MAAO,QAASC,SAAU,OAAQC,WAAY,KAAjF,SACKhB,EAAMiB,YCrCjBC,EAAepB,EAAAA,GAAAA,IAAH,iGAMLqB,EAAiB,WAE1B,OAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAqB,IAAjD,eAAOG,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAcC,MAAK,SAACC,GACXA,EAAKC,KACNL,EAAUI,EAAKL,QAEnBD,GAAQ,QAEb,IAGCD,GAAO,SAACS,EAAA,EAAD,KACH,SAACZ,EAAD,UACKK,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OAAkB,SAAC3B,EAAD,CACeD,QAAS2B,EAAME,GACf9B,UAAW4B,EAAMG,KACjBlB,MAAOe,EAAMI,MAHhBH,S,4DChBpDI,EAAevC,EAAAA,GAAAA,IAAH,+LAKI,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOoC,aAKrCC,EAA0B,SAAC,GAA4B,IAA3BtB,EAA0B,EAA1BA,MAAOuB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAElD,GAA8BrB,EAAAA,EAAAA,UAASqB,GAAvC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAYC,EAAAA,EAAAA,MAElB,OACI,UAACR,EAAD,YACI,SAAC1B,EAAA,EAAD,CAAMC,MAAO,CAACG,SAAU,OAAQC,WAAY,OAA5C,SACKC,KAEL,SAAC,IAAD,CAAQwB,QAASC,EAAWI,SAAU,kBAAMH,GAAS,SAAAI,GAAI,OAAKA,MAAOnC,MAAO,CAACoC,OAAQ,iBACrF,SAACC,EAAA,EAAD,CAAiBrC,MAAO,CAACoC,OAAQ,cAAevC,QAAS,kBAAMmC,EAAU,YAAcJ,UCtB7FU,EAASpD,EAAAA,GAAAA,IAAH,oHAIiB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOoC,aAGnDa,EAAUrD,EAAAA,GAAAA,IAAH,oHAOAsD,EAAqB,WAE9B,IAAM7C,GAAWC,EAAAA,EAAAA,MAEX6C,GAAWC,EAAAA,EAAAA,KAAuB,SAAAC,GAAK,OAAIA,EAAMC,IAAIC,gBAE3D,GAAwBrC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOsC,EAAP,KAAiBC,EAAjB,KAEA,GAA0BvC,EAAAA,EAAAA,eAA4BwC,GAAtD,eAAO5B,EAAP,KAActB,EAAd,KAuBA,OArBAe,EAAAA,EAAAA,YAAU,WACF4B,IACAQ,EAAAA,EAAAA,IAAeR,GAAU1B,MAAK,SAAAC,GACtBA,EAAKC,KACLiC,EAAAA,GAAAA,MAAclC,EAAKkC,SACnBxC,GAAQ,IAGR,OAAIM,QAAJ,IAAIA,GAAAA,EAAMI,OACNtB,EAASkB,EAAKI,OACdV,GAAQ,KAGRqC,GAAY,GACZrC,GAAQ,SAKzB,CAAC+B,IAGAhC,GAAO,SAACS,EAAA,EAAD,IAAsB4B,GAAW,SAAC,KAAD,CACpCK,OAAO,UACP9C,MAAM,iJACN+C,OACI,UAAC,IAAD,CAAQC,KAAK,UAAwBxD,QAAS,kBAAMyD,OAAOC,SAASC,KAAO,qHAA3E,+DACa,SAACC,EAAA,EAAD,MADc,cAI9B,iCAED,UAACnB,EAAD,YACI,SAAC,IAAD,CAAQoB,KAAM,GAAIC,IAAG,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAOJ,KAAK4C,UACnC,SAAC7D,EAAA,EAAD,CAAMC,MAAO,CAACI,WAAY,IAAKD,SAAU,OAAQiC,OAAQ,cAAzD,gBAAyEhB,QAAzE,IAAyEA,OAAzE,EAAyEA,EAAOJ,KAAKQ,QACrF,SAACqC,EAAA,EAAD,CAAqB7D,MAAO,CAACoC,OAAQ,cAAevC,QAAS,kBAAMF,GAASmE,EAAAA,EAAAA,aAGhF,UAACvB,EAAD,YACI,SAACZ,EAAD,CAActB,MAAM,eAAewB,SAAS,EAAOD,KAAK,SACxD,SAACD,EAAD,CAActB,MAAM,eAAewB,SAAS,EAAOD,KAAK,SACxD,SAACD,EAAD,CAActB,MAAM,eAAewB,SAAS,EAAOD,KAAK,eCpElEmC,EAAiB7E,EAAAA,GAAAA,IAAH,qbA0BP8E,EAAc,WAEvB,IAAMC,GAAUvB,EAAAA,EAAAA,KAAuB,SAAAC,GAAK,OAAIA,EAAMuB,KAAKC,KAAKF,WAC1DxE,GAAUiD,EAAAA,EAAAA,KAAuB,SAAAC,GAAK,OAAIA,EAAMC,IAAIC,gBAM1D,OAC0C,IAAtCuB,OAAOC,KAAKJ,GAAW,IAAIK,QAAe,SAAC,KAAD,CACtCnB,OAAO,UACP9C,MAAM,kWACN+C,OACI,UAAC,IAAD,CAAQC,KAAK,UAAwBxD,QAT5B,WACjByD,OAAOC,SAASC,KAAOe,EAAAA,EAAAA,oBAQf,6CACU,SAACd,EAAA,EAAD,MADiB,cAI9B,SAACM,EAAD,UAEGtE,GAAU,SAAC+C,EAAD,KAAqB,SAACjC,EAAD","sources":["pages/profile-page/pages/bot-page/components/Guild.tsx","pages/profile-page/pages/bot-page/components/SelectGuild.tsx","pages/profile-page/pages/bot-page/components/ModuleButton.tsx","pages/profile-page/pages/bot-page/components/BotControlPage.tsx","pages/profile-page/pages/bot-page/BotPage.tsx"],"sourcesContent":["import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {Text} from \"../../../../../components/Text\";\nimport {useDispatch} from \"react-redux\";\nimport {setGuild} from \"../../../../../store/actions/botActions\";\n\nconst StyledGuildWrapper = styled.div`\n  margin: 20px;\n  width: 200px;\n  max-height: 250px;\n`\n\nconst StyledGuildBox = styled.div<any>`\n  width: 160px;\n  height: 160px;\n  border-radius: 30px;\n  margin: 20px;\n  background-color: ${props => props.theme.colors.dark};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url(${props => props.guildIcon ? `https://cdn.discordapp.com/icons/${props.guildId}/${props.guildIcon}.png` : `https://play-lh.googleusercontent.com/0oO5sAneb9lJP6l8c6DH4aj6f85qNpplQVHmPmbbBxAukDnlO7DarDW0b-kEIHa8SQ`});\n\n  cursor: pointer;\n  transition: all 0.1s ease-in-out;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Guild: FC<any> = (props) => {\n\n    const dispatch = useDispatch();\n\n    const clickHandler = () => {\n        dispatch(setGuild(props.guildId))\n    }\n\n    return (\n        <StyledGuildWrapper>\n            <StyledGuildBox {...props} onClick={clickHandler}/>\n            <Text style={{textAlign: \"center\", color: \"white\", fontSize: \"12px\", fontWeight: 500}}>\n                {props.title}\n            </Text>\n        </StyledGuildWrapper>\n    )\n}","import {FC, useEffect, useState} from \"react\";\nimport {fetchGuilds} from \"../../../../../utils/api\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\nimport {Guild} from \"./Guild\";\nimport styled from \"styled-components\";\n\nconst GuildWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport const SelectGuild:FC = () => {\n\n    const [load, setLoad] = useState(true);\n    const [guilds, setGuilds] = useState<Array<any>>([]);\n\n    useEffect(() => {\n        fetchGuilds().then((data) => {\n            if (!data.err){\n                setGuilds(data.guilds)\n            }\n            setLoad(false);\n        })\n    }, [])\n\n    return (\n        load ? <LoadingOutlined /> :\n            <GuildWrapper>\n                {guilds.map((guild, index) => <Guild key={index}\n                                                             guildId={guild.id}\n                                                             guildIcon={guild.icon}\n                                                             title={guild.name}/>)}\n            </GuildWrapper>\n    )\n}","import {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Text} from \"../../../../../components/Text\";\nimport {useNavigate} from \"react-router-dom\";\nimport {SettingOutlined} from \"@ant-design/icons\";\nimport {Switch} from \"antd\";\n\ninterface Props{\n    title: string,\n    link: string,\n    checked: boolean\n}\n\nconst StyledButton = styled.div`\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${props => props.theme.colors.grayBlack};\n  border-radius: 10px;\n  margin: 10px;\n`;\n\nexport const ModuleButton: FC<Props> = ({title, link, checked}) => {\n\n    const [isChecked, setCheck] = useState(checked);\n    const navigator = useNavigate();\n\n    return(\n        <StyledButton>\n            <Text style={{fontSize: \"16px\", fontWeight: \"500\"}}>\n                {title}\n            </Text>\n            <Switch checked={isChecked} onChange={() => setCheck(prev => !prev)} style={{margin: \"0 0 0 10px\"}}/>\n            <SettingOutlined style={{margin: \"0 0 0 auto\"}} onClick={() => navigator(\"/profile/\" + link)}/>\n        </StyledButton>\n    )\n}","import {FC, useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../../store/store\";\nimport {fetchGuildData} from \"../../../../../utils/api\";\nimport {CloseCircleOutlined, LoadingOutlined, RobotOutlined} from \"@ant-design/icons\";\nimport {Avatar, Button, message, Result} from \"antd\";\nimport styled from \"styled-components\";\nimport {Text} from \"../../../../../components/Text\";\nimport {Guild} from \"../../../../../types/Guild\";\nimport {removeGuild} from \"../../../../../store/actions/botActions\";\nimport {ModuleButton} from \"./ModuleButton\";\n\nconst Header = styled.div`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  border-bottom: 3px solid ${props => props.theme.colors.grayBlack}\n`;\n\nconst Buttons = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gad: 20px;\n`\n\nexport const BotControlPage: FC = () => {\n\n    const dispatch = useDispatch();\n\n    const guild_id = useSelector<RootState>(state => state.bot.currentGuild) as string;\n\n    const [load, setLoad] = useState(true);\n    const [addError, setAddError] = useState(false);\n\n    const [guild, setGuild] = useState<Guild | undefined>(undefined);\n\n    useEffect(() => {\n        if (guild_id){\n            fetchGuildData(guild_id).then(data => {\n                if (data.err){\n                    message.error(data.message);\n                    setLoad(false);\n                }\n                else{\n                    if (data?.guild){\n                        setGuild(data.guild);\n                        setLoad(false);\n                    }\n                    else{\n                        setAddError(true);\n                        setLoad(false);\n                    }\n                }\n            });\n        }\n    }, [guild_id])\n\n    return(\n        load ? <LoadingOutlined /> : addError ? <Result\n            status=\"warning\"\n            title=\"Добавьте бота на ваш сервер\"\n            extra={\n                <Button type=\"primary\" key=\"console\" onClick={() => window.location.href = \"https://discord.com/oauth2/authorize?client_id=956507803395178549&permissions=8&scope=bot%20applications.commands\"}>\n                    Добавить <RobotOutlined />\n                </Button>\n            }\n        /> : <>\n\n            <Header>\n                <Avatar size={32} src={guild?.data.avatar} />\n                <Text style={{fontWeight: 500, fontSize: \"14px\", margin: \"0 0 0 10px\"}}>{guild?.data.name}</Text>\n                <CloseCircleOutlined style={{margin: \"0 0 0 auto\"}} onClick={() => dispatch(removeGuild())}/>\n            </Header>\n\n            <Buttons>\n                <ModuleButton title=\"AntiScamLink\" checked={false} link=\"asl\"/>\n                <ModuleButton title=\"AntiScamLink\" checked={false} link=\"asl\"/>\n                <ModuleButton title=\"AntiScamLink\" checked={false} link=\"asl\"/>\n            </Buttons>\n        </>\n    )\n}","import {FC} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../store/store\";\nimport {Button, Result} from \"antd\";\nimport { RobotOutlined } from \"@ant-design/icons\";\nimport config from \"../../../../config/config\";\nimport {SelectGuild} from \"./components/SelectGuild\";\nimport {BotControlPage} from \"./components/BotControlPage\";\nimport styled from \"styled-components\";\n\nconst BotPageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 15px;\n  }\n\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: #070707;\n  }\n`;\n\nexport const BotPage: FC = () => {\n\n    const discord = useSelector<RootState>(state => state.auth.user.discord) as Object;\n    const guildId = useSelector<RootState>(state => state.bot.currentGuild);\n\n    const discordLogin = () => {\n        window.location.href = config.DISCORD_LOGIN_PAGE;\n    }\n\n    return (\n        Object.keys(discord || {}).length === 0 ? <Result\n            status=\"warning\"\n            title=\"Перед использованием данного функционала войдите в свой аккаунт Discord\"\n            extra={\n                <Button type=\"primary\" key=\"console\" onClick={discordLogin}>\n                    Войти <RobotOutlined />\n                </Button>\n            }\n        /> : <BotPageWrapper>\n            {\n                guildId ? <BotControlPage /> : <SelectGuild />\n            }\n        </BotPageWrapper>\n    )\n}"],"names":["StyledGuildWrapper","styled","StyledGuildBox","props","theme","colors","dark","guildIcon","guildId","Guild","dispatch","useDispatch","onClick","setGuild","Text","style","textAlign","color","fontSize","fontWeight","title","GuildWrapper","SelectGuild","useState","load","setLoad","guilds","setGuilds","useEffect","fetchGuilds","then","data","err","LoadingOutlined","map","guild","index","id","icon","name","StyledButton","grayBlack","ModuleButton","link","checked","isChecked","setCheck","navigator","useNavigate","onChange","prev","margin","SettingOutlined","Header","Buttons","BotControlPage","guild_id","useSelector","state","bot","currentGuild","addError","setAddError","undefined","fetchGuildData","message","status","extra","type","window","location","href","RobotOutlined","size","src","avatar","CloseCircleOutlined","removeGuild","BotPageWrapper","BotPage","discord","auth","user","Object","keys","length","config"],"sourceRoot":""}