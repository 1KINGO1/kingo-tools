{"version":3,"file":"static/js/804.7df4abf4.chunk.js","mappings":"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","sources":["pages/profile-page/pages/discordClientBot/TokenEnter.tsx","pages/profile-page/pages/discordClientBot/JsonEnter.tsx","pages/profile-page/pages/discordClientBot/ResponsePreview.tsx","pages/profile-page/pages/discordClientBot/SendButton.tsx","pages/profile-page/pages/discordClientBot/Presets/presets.config.ts","pages/profile-page/pages/discordClientBot/Presets/Preset.tsx","pages/profile-page/pages/discordClientBot/Presets/Presets.tsx","pages/profile-page/pages/discordClientBot/ControlForm.tsx","pages/profile-page/pages/discordClientBot/DiscordClientBot.tsx"],"sourcesContent":["import {ChangeEvent, FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {ApiOutlined, CheckOutlined, InfoCircleOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Button, Input, Tooltip, message} from \"antd\";\nimport {dcbLogin} from \"../../../../utils/api\";\nimport {useDispatch} from \"react-redux\";\nimport {setToken, removeToken} from \"../../../../store/actions/dbcActions\";\n\nconst StyledTokenEnter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 40px;\n`\n\nexport const TokenEnter:FC = () => {\n\n  const [isLoading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [isSuccess, setSuccess] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n    setSuccess(false);\n    dispatch(removeToken());\n  }\n\n  const clickHandler = async () => {\n    setLoading(true);\n    const res = await dcbLogin(value);\n    if (res.err){\n      message.error(res.message);\n      setLoading(false);\n      dispatch(removeToken());\n    }\n    else{\n      setSuccess(true);\n      dispatch(setToken(value));\n      setLoading(false);\n    }\n  }\n\n  return(\n    <StyledTokenEnter>\n      <Input\n        value={value}\n        onChange={changeHandler}\n        size=\"large\"\n        placeholder=\"Введите токен клиента\"\n        prefix={<UserOutlined className=\"site-form-item-icon\" />}\n        suffix={\n          <Tooltip title=\"Гайд, как получить этот токен, находится на GitHub\">\n            <InfoCircleOutlined style={{ color: 'rgba(255,255,255,0.45)' }} />\n          </Tooltip>\n        }\n      />\n      <Button\n        type=\"primary\"\n        icon={isSuccess ? <CheckOutlined style={{ color: 'rgba(255,255,255,0.45)' }}/> : <ApiOutlined style={{ color: 'rgba(255,255,255,0.45)' }}/>}\n        style={{height: \"100%\"}}\n        loading={isLoading}\n        onClick={clickHandler}\n      >\n        {isSuccess ? \"Подключено\" : \"Подключится\"}\n      </Button>\n    </StyledTokenEnter>\n  )\n}","import TextArea from \"antd/lib/input/TextArea\";\nimport {ChangeEvent, FC, useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Text} from \"../../../../components/Text\";\nimport {Typography} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setBody} from \"../../../../store/actions/dbcActions\";\nimport {RootState} from \"../../../../store/store\";\n\nconst StyledJSON = styled.div`\n  width: 500px; \n  margin: 0 0 0 20px;\n`\n\nexport const JsonEnter: FC = () => {\n\n\n  const [json, setJson] = useState(\"\");\n  const [jsonError, setJsonError] = useState(false);\n\n  const body = useSelector<RootState>(state => state.dcb.body);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (body !== json){\n      setJson(JSON.stringify(body as string));\n    }\n  }, [body]);\n\n  const changeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setJson(e.target.value);\n    try{\n      JSON.parse(e.target.value);\n      setJsonError(false);\n      dispatch(setBody(e.target.value));\n    } catch (err){\n      if (e.target.value.length === 0){\n        setJsonError(false);\n      }\n      setJsonError(true);\n    }\n  }\n\n  return(\n    <StyledJSON>\n      <Text style={{margin: \"10px 0\"}}>\n        Body (in JSON) {jsonError ? <Typography.Text type=\"danger\" style={{display: \"inline-block\"}}>Неправильный формат JSON</Typography.Text> : \"\"}\n      </Text>\n      <TextArea style={{resize: \"none\"}} value={json} onChange={changeHandler} placeholder=\"Request body object in JSON format\" />\n    </StyledJSON>\n  )\n}","import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../store/store\";\n\nconst StyledResponse = styled.div`\n  margin: 10px 0;\n  height: 10%;\n`\n\nexport const ResponsePreview: FC = () => {\n\n  const response = useSelector<RootState>(state => state.dcb.response) as string;\n\n  return(\n    <StyledResponse>\n      <TextArea\n        style={{resize: \"none\"}}\n        placeholder=\"Discord API Response\"\n        disabled\n        value={JSON.stringify(response) || response}\n      />\n    </StyledResponse>\n  )\n}","import React, {FC} from \"react\";\nimport {Button, message} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../store/store\";\nimport axios from \"axios\";\nimport {dcbSend} from \"../../../../utils/api\";\nimport {setResponse} from \"../../../../store/actions/dbcActions\";\n\nexport const SendButton: FC = () => {\n\n  const authToken = useSelector<RootState>(state => state.dcb.token) as string;\n  const endPoint = useSelector<RootState>(state => state.dcb.endpoint) as string;\n  const currentMethod = useSelector<RootState>(state => state.dcb.method) as string;\n  const currentBody = useSelector<RootState>(state => state.dcb.body) as object;\n\n  const dispatch = useDispatch();\n\n  const clickHandler = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!authToken || !endPoint || !currentMethod){\n      message.error(\"Ошибка\");\n    }\n    else{\n      const res = await dcbSend(currentMethod, endPoint, currentBody, authToken);\n      dispatch(setResponse(res.message.message || res.message));\n    }\n  }\n\n  return (\n    <Button size=\"large\" type=\"primary\" onClick={clickHandler}>\n      Отправить\n    </Button>\n  )\n}","export default [\n  {\n    name: \"Отправить сообщение\",\n    method: \"post\",\n    endpoint: \"channels/YOUR CHANNEL ID HERE/messages\",\n    body: \"{\\\"content\\\": \\\"YOUR MESSAGE HERE\\\"}\"\n  },\n  {\n    name: \"Поставить емодзи\",\n    method: \"put\",\n    endpoint: \"channels/CHANNEL ID/messages/MESSAGE ID/reactions/EMOJI/@me\",\n    body: \"{}\"\n  },\n  {\n    name: \"Убрать емодзи\",\n    method: \"delete\",\n    endpoint: \"/channels/CHANNEL ID/messages/MESSAGE ID/reactions/EMOJI/@me\",\n    body: \"{}\"\n  }\n];","import {FC, MouseEvent} from \"react\";\nimport {Button} from \"antd\";\nimport {useDispatch} from \"react-redux\";\nimport {setBody, setEndPoint, setMethod} from \"../../../../../store/actions/dbcActions\";\n\ninterface Preset{\n  name: string,\n  method: string,\n  endpoint: string,\n  body: string\n};\n\nexport const Preset: FC<Preset> = ({name, endpoint, body, method}) => {\n\n  const dispatch = useDispatch();\n\n  const clickHandler = (e: MouseEvent<HTMLButtonElement>) => {\n    dispatch(setMethod(method));\n    dispatch(setBody(body));\n    dispatch(setEndPoint(endpoint));\n  }\n\n  return (\n    <Button onClick={clickHandler} type=\"primary\" size=\"large\" style={{margin: \"10px\"}}>\n      {name}\n    </Button>\n  )\n}","import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport config from \"./presets.config\";\nimport {Preset} from \"./Preset\";\nimport {Text} from \"../../../../../components/Text\";\n\nconst StyledPresets = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Presets: FC = () => {\n  return (\n    <>\n      <Text style={{margin: \"10px 0\", fontSize: \"25px\", textAlign: \"center\"}}>\n        Presets\n      </Text>\n      <StyledPresets>\n        {config.map((item, index) => <Preset key={index} name={item.name} method={item.method} endpoint={item.endpoint} body={item.body}/>)}\n      </StyledPresets>\n    </>\n  )\n}","import {ChangeEvent, FC} from \"react\";\nimport styled from \"styled-components\";\nimport {TokenEnter} from \"./TokenEnter\";\nimport {Input, Popover, Radio} from \"antd\";\nimport {Text} from \"../../../../components/Text\";\nimport {JsonEnter} from \"./JsonEnter\";\nimport {ResponsePreview} from \"./ResponsePreview\";\nimport {SendButton} from \"./SendButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../store/store\";\nimport {setEndPoint, setMethod} from \"../../../../store/actions/dbcActions\";\nimport {Presets} from \"./Presets/Presets\";\n\nconst StyleControlForm = styled.div`\n  margin: 20px 0 auto 0;\n`\n\nconst EndPoint = styled.div`\n  margin: 20px 0;\n`\n\nconst Flex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const ControlForm:FC = () => {\n\n  const token = useSelector<RootState>(state => state.dcb.token);\n\n  const endPoint = useSelector<RootState>(state => state.dcb.endpoint);\n  const currentMethod = useSelector<RootState>(state => state.dcb.method) as string;\n\n  const dispatch = useDispatch();\n\n  const onMethodChange = (e: any) => {\n    dispatch(setMethod(e.target.value));\n  }\n\n  const onEndpointChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setEndPoint(e.target.value));\n  }\n\n  return(\n    <StyleControlForm>\n      <TokenEnter />\n      {token ?\n        <EndPoint>\n          <Text style={{margin: \"10px 0\"}}>\n            Discord API endpoint\n          </Text>\n          <Popover content={\"Список всех endpoints - https://discord.com/developers/docs\"} trigger=\"hover\">\n            <Input size=\"large\" addonBefore=\"https://discord.com/api/v9/\" value={endPoint as string}\n                   onChange={onEndpointChange}/>\n          </Popover>\n          <Flex>\n            <div>\n              <Text style={{margin: \"10px 0\"}}>\n                Request Method\n              </Text>\n              <Radio.Group defaultValue=\"GET\" buttonStyle=\"solid\" onChange={onMethodChange} value={currentMethod.toUpperCase()}>\n                <Radio.Button value=\"GET\">GET</Radio.Button>\n                <Radio.Button value=\"POST\">POST</Radio.Button>\n                <Radio.Button value=\"PUT\">PUT</Radio.Button>\n                <Radio.Button value=\"PATCH\">PATCH</Radio.Button>\n                <Radio.Button value=\"DELETE\">DELETE</Radio.Button>\n              </Radio.Group>\n            </div>\n            {currentMethod === \"get\" || currentMethod === \"delete\" ? \"\" : <JsonEnter/>}\n            <SendButton/>\n          </Flex>\n          <ResponsePreview/>\n          <Presets />\n        </EndPoint> :\n        \"\"\n      }\n    </StyleControlForm>\n  )\n}","import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {Text} from \"../../../../components/Text\";\nimport {ControlForm} from \"./ControlForm\";\n\nconst StyledDiscordClient = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`\n\nexport const DiscordClientBot: FC = () => {\n  return (\n    <StyledDiscordClient>\n      <div>\n        <Text style={{fontSize: \"2em\", textAlign: \"center\", margin: \"20px 0\"}}>\n          Данная фича помогает управлять обычным Discord аккаунтом через специальный токен.\n          Также на обычном аккаунте можно создать полноценного бота, который даже сможет реагировать на сообщения и команды.\n        </Text>\n        <Text style={{fontSize: \"1.2em\", textAlign: \"center\", margin: \"10px 0\", color: \"grayWhite\"}}>\n          Сдесь представлено онлайн управление таким аккаунтом. Доступ к исходникам бота у создателя сайта.\n        </Text>\n      </div>\n      <ControlForm />\n    </StyledDiscordClient>\n  )\n}"],"names":["StyledTokenEnter","styled","TokenEnter","useState","isLoading","setLoading","value","setValue","isSuccess","setSuccess","dispatch","useDispatch","clickHandler","dcbLogin","res","err","message","removeToken","setToken","onChange","e","target","size","placeholder","prefix","UserOutlined","className","suffix","title","InfoCircleOutlined","style","color","type","icon","CheckOutlined","ApiOutlined","height","loading","onClick","StyledJSON","JsonEnter","json","setJson","jsonError","setJsonError","body","useSelector","state","dcb","useEffect","JSON","stringify","Text","margin","display","TextArea","resize","parse","setBody","length","StyledResponse","ResponsePreview","response","disabled","SendButton","authToken","token","endPoint","endpoint","currentMethod","method","currentBody","dcbSend","setResponse","name","Preset","setMethod","setEndPoint","StyledPresets","Presets","fontSize","textAlign","config","item","index","StyleControlForm","EndPoint","Flex","ControlForm","content","trigger","addonBefore","defaultValue","buttonStyle","toUpperCase","StyledDiscordClient","DiscordClientBot"],"sourceRoot":""}