{"version":3,"file":"static/js/452.12c14a09.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/RobotOutlined.js","../node_modules/@ant-design/icons/es/icons/RobotOutlined.js","pages/profile-page/pages/bot-page/components/Guild.tsx","pages/profile-page/pages/bot-page/components/SelectGuild.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js","pages/profile-page/pages/bot-page/components/ModuleButton.tsx","pages/profile-page/pages/bot-page/components/BotControlPage.tsx","pages/profile-page/pages/bot-page/BotPage.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar RobotOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M300 328a60 60 0 10120 0 60 60 0 10-120 0zM852 64H172c-17.7 0-32 14.3-32 32v660c0 17.7 14.3 32 32 32h680c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-32 660H204V128h616v596zM604 328a60 60 0 10120 0 60 60 0 10-120 0zm250.2 556H169.8c-16.5 0-29.8 14.3-29.8 32v36c0 4.4 3.3 8 7.4 8h729.1c4.1 0 7.4-3.6 7.4-8v-36c.1-17.7-13.2-32-29.7-32zM664 508H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"robot\", \"theme\": \"outlined\" };\nexport default RobotOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RobotOutlinedSvg from \"@ant-design/icons-svg/es/asn/RobotOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RobotOutlined = function RobotOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RobotOutlinedSvg\n  }));\n};\n\nRobotOutlined.displayName = 'RobotOutlined';\nexport default /*#__PURE__*/React.forwardRef(RobotOutlined);","import {FC} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Text} from \"../../../../../components/Text\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setGuild} from \"../../../../../store/actions/botActions\";\r\n\r\nconst StyledGuildWrapper = styled.div`\r\n  margin: 20px 40px;\r\n  width: 200px;\r\n  max-height: 250px;\r\n`\r\n\r\nconst StyledGuildBox = styled.div<any>`\r\n  width: 160px;\r\n  height: 160px;\r\n  border-radius: 100%;\r\n  margin: 20px;\r\n  background-color: ${props => props.theme.colors.dark};\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-image: url(${props => props.guildIcon ? `https://cdn.discordapp.com/icons/${props.guildId}/${props.guildIcon}.png` : `https://play-lh.googleusercontent.com/0oO5sAneb9lJP6l8c6DH4aj6f85qNpplQVHmPmbbBxAukDnlO7DarDW0b-kEIHa8SQ`});\r\n\r\n  cursor: pointer;\r\n  transition: all 0.1s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nexport const Guild: FC<any> = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n        dispatch(setGuild(props.guildId))\r\n    }\r\n\r\n    return (\r\n        <StyledGuildWrapper>\r\n            <StyledGuildBox {...props} onClick={clickHandler}/>\r\n            <Text style={{textAlign: \"center\", color: \"white\", fontSize: \"12px\", fontWeight: 500}}>\r\n                {props.title}\r\n            </Text>\r\n        </StyledGuildWrapper>\r\n    )\r\n}","import {FC, useEffect, useState} from \"react\";\r\nimport {fetchGuilds} from \"../../../../../utils/api\";\r\nimport {Guild} from \"./Guild\";\r\nimport styled from \"styled-components\";\r\nimport {Loading} from \"../../../../../components/Loading\";\r\nimport {AnimatePresence, motion} from \"framer-motion\";\r\n\r\nconst GuildWrapper = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const SelectGuild: FC = () => {\r\n\r\n  const [load, setLoad] = useState(true);\r\n  const [guilds, setGuilds] = useState<Array<any>>([]);\r\n\r\n  useEffect(() => {\r\n    fetchGuilds().then((data) => {\r\n      if (!data.err) {\r\n        setGuilds(data.guilds)\r\n      }\r\n      setLoad(false);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    load ? <Loading/> :\r\n      <GuildWrapper initial={{opacity: 0}}\r\n                    animate={{opacity: 1}}>\r\n        {guilds.map((guild, index) => <Guild key={index}\r\n                                             guildId={guild.id}\r\n                                             guildIcon={guild.icon}\r\n                                             title={guild.name}/>)}\r\n      </GuildWrapper>\r\n  )\r\n}","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);","import {FC, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Text} from \"../../../../../components/Text\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {Switch} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../../store/store\";\r\nimport {toggleModule} from \"../../../../../utils/api\";\r\n\r\ninterface Props{\r\n    title: string,\r\n    link: string,\r\n    checked?: boolean,\r\n    value: string,\r\n    canCheck: boolean\r\n}\r\n\r\nconst StyledButton = styled.div`\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.colors.grayBlack};\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const ModuleButton: FC<Props> = ({title, link, checked, value, canCheck}) => {\r\n\r\n    const guild_id = useSelector<RootState>(state => state.bot.currentGuild) as string;\r\n\r\n    const [isChecked, setCheck] = useState(checked);\r\n    const [load, setLoad] = useState(false);\r\n    const navigator = useNavigate();\r\n\r\n    const changeHandler = () => {\r\n        setLoad(true);\r\n        if (!isChecked){\r\n            toggleModule(value, guild_id, \"on_module\").then(data => {\r\n                setLoad(false);\r\n                if (!data.err){\r\n                    setCheck(true)\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            toggleModule(value, guild_id, \"off_module\").then(data => {\r\n                setLoad(false);\r\n                if (!data.err){\r\n                    setCheck(false)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <StyledButton>\r\n            <Text style={{fontSize: \"16px\", fontWeight: \"500\"}}>\r\n                {title}\r\n            </Text>\r\n            {canCheck ? <Switch checked={isChecked} onChange={changeHandler} loading={load} style={{margin: \"0 0 0 10px\"}}/> : \"\" }\r\n            <SettingOutlined style={{margin: \"0 0 0 auto\"}} onClick={() => navigator(\"/profile/\" + link)}/>\r\n        </StyledButton>\r\n    )\r\n}","import {FC, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../../store/store\";\r\nimport {fetchGuildData} from \"../../../../../utils/api\";\r\nimport {CloseCircleOutlined, LoadingOutlined, RobotOutlined, WarningOutlined} from \"@ant-design/icons\";\r\nimport {Avatar, Button, message, Result} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Text} from \"../../../../../components/Text\";\r\nimport {Guild} from \"../../../../../types/Guild\";\r\nimport {removeGuild, setGuild, setGuildData} from \"../../../../../store/actions/botActions\";\r\nimport {ModuleButton} from \"./ModuleButton\";\r\nimport {Loading} from \"../../../../../components/Loading\";\r\nimport { motion } from \"framer-motion\";\r\nimport {ArrowLeftOutlined} from \"@ant-design/icons\";\r\n\r\nconst Header = styled.div`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 3px solid ${props => props.theme.colors.grayBlack}\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gad: 20px;\r\n`\r\n\r\nexport const BotControlPage: FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const guild_id = useSelector<RootState>(state => state.bot.currentGuild) as string;\r\n    const guild = useSelector<RootState>(state => state.bot.guildData) as Guild;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [addError, setAddError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (guild_id){\r\n            fetchGuildData(guild_id).then(data => {\r\n                if (data.err){\r\n                    message.error(data.message);\r\n                    setLoad(false);\r\n                }\r\n                else{\r\n                    if (data?.guild){\r\n                        dispatch(setGuildData({guild: data.guild, channels: data.channels, roles: data.roles}))\r\n                        setLoad(false);\r\n                    }\r\n                    else{\r\n                        setAddError(true);\r\n                        setLoad(false);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [guild_id])\r\n\r\n    return(\r\n        load ? <Loading /> : addError ? <Result\r\n            status=\"warning\"\r\n            title=\"Добавьте бота на ваш сервер\"\r\n            extra={\r\n            <>\r\n                <Button type=\"primary\" key=\"console\" onClick={() => window.location.href = \"https://discord.com/oauth2/authorize?client_id=956507803395178549&permissions=8&scope=bot%20applications.commands\"}>\r\n                    Добавить <RobotOutlined />\r\n                </Button>\r\n                <Button key=\"console\" onClick={() => dispatch(setGuild(\"\"))}>\r\n                    Назад <ArrowLeftOutlined />\r\n                </Button>\r\n            </>\r\n            }\r\n        /> : <motion.div  initial={{opacity: 0}}\r\n                          animate={{opacity: 1}}>\r\n\r\n            <Header>\r\n                <Avatar size={32} src={guild?.data.avatar} />\r\n                <Text style={{fontWeight: 500, fontSize: \"14px\", margin: \"0 0 0 10px\"}}>{guild?.data.name}</Text>\r\n                {guild?.options.allowed ? \"\" : <WarningOutlined style={{margin: \"0 0 0 10px\", color: \"yellow\"}}/>}\r\n                <CloseCircleOutlined style={{margin: \"0 0 0 auto\"}} onClick={() => dispatch(removeGuild())}/>\r\n            </Header>\r\n\r\n            <Buttons>\r\n                {/*<ModuleButton title=\"AntiScamLink\"*/}\r\n                {/*              value=\"antiScamLinks\"*/}\r\n                {/*              checked={guild?.options.antiScamLinks.on || false}*/}\r\n                {/*              canCheck={true}*/}\r\n                {/*              link=\"asl\"*/}\r\n                {/*/>*/}\r\n                <ModuleButton title=\"Commands\"\r\n                              value=\"commands\"\r\n                              canCheck={false}\r\n                              link=\"commands\"\r\n                />\r\n                <ModuleButton title=\"Level System\"\r\n                              value=\"levelSystem\"\r\n                              checked={guild?.options.levelSystem.on || false}\r\n                              canCheck={true}\r\n                              link=\"levels\"\r\n                />\r\n                <ModuleButton title=\"Economy System\"\r\n                              value=\"economy\"\r\n                              checked={guild?.options.economy.on || false}\r\n                              canCheck={true}\r\n                              link=\"economy\"\r\n                />\r\n                <ModuleButton title=\"Logger\"\r\n                              value=\"logger\"\r\n                              checked={guild?.options.logger.on || false}\r\n                              canCheck={true}\r\n                              link=\"logger\"\r\n                />\r\n                <ModuleButton title=\"Reaction Roles\"\r\n                              value=\"reactionRole\"\r\n                              checked={false}\r\n                              canCheck={false}\r\n                              link=\"rr\"\r\n                />\r\n                <ModuleButton title=\"Custom Commands\"\r\n                              value=\"customCommands\"\r\n                              checked={false}\r\n                              canCheck={false}\r\n                              link=\"cc\"\r\n                />\r\n                <ModuleButton title=\"Web Sender\"\r\n                              value=\"webSender\"\r\n                              checked={false}\r\n                              canCheck={false}\r\n                              link=\"webSender\"\r\n                />\r\n            </Buttons>\r\n        </motion.div>\r\n    )\r\n}","import {FC} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../store/store\";\r\nimport {Button, Result} from \"antd\";\r\nimport { RobotOutlined } from \"@ant-design/icons\";\r\nimport config from \"../../../../config/config\";\r\nimport {SelectGuild} from \"./components/SelectGuild\";\r\nimport {BotControlPage} from \"./components/BotControlPage\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BotPageWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto; \r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n \r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    background: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #121212;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: #070707;\r\n  }\r\n`;\r\n\r\nexport const BotPage: FC = () => {\r\n\r\n    const discord = useSelector<RootState>(state => state.auth.user.discord) as Object;\r\n    const guildId = useSelector<RootState>(state => state.bot.currentGuild);\r\n\r\n    const discordLogin = () => {\r\n        window.location.href = config.DISCORD_LOGIN_PAGE;\r\n    }\r\n\r\n    return (\r\n        Object.keys(discord || {}).length === 0 ? <Result\r\n            status=\"warning\"\r\n            title=\"Перед использованием данного функционала войдите в свой аккаунт Discord\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={discordLogin}>\r\n                    Войти <RobotOutlined />\r\n                </Button>\r\n            }\r\n        /> : <BotPageWrapper>\r\n            {\r\n                guildId ? <BotControlPage /> : <SelectGuild />\r\n            }\r\n        </BotPageWrapper>\r\n    )\r\n}"],"names":["RobotOutlined","props","ref","React","AntdIcon","_objectSpread","icon","RobotOutlinedSvg","displayName","StyledGuildWrapper","styled","StyledGuildBox","theme","colors","dark","guildIcon","guildId","Guild","dispatch","useDispatch","onClick","setGuild","Text","style","textAlign","color","fontSize","fontWeight","title","GuildWrapper","motion","SelectGuild","useState","load","setLoad","guilds","setGuilds","useEffect","fetchGuilds","then","data","err","Loading","initial","opacity","animate","map","guild","index","id","name","WarningOutlined","WarningOutlinedSvg","StyledButton","grayBlack","ModuleButton","link","checked","value","canCheck","guild_id","useSelector","state","bot","currentGuild","isChecked","setCheck","navigator","useNavigate","onChange","toggleModule","loading","margin","SettingOutlined","Header","Buttons","BotControlPage","guildData","addError","setAddError","fetchGuildData","message","setGuildData","channels","roles","status","extra","type","window","location","href","ArrowLeftOutlined","size","src","avatar","options","allowed","CloseCircleOutlined","removeGuild","levelSystem","on","economy","logger","BotPageWrapper","BotPage","discord","auth","user","Object","keys","length","config"],"sourceRoot":""}