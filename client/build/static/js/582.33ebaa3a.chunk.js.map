{"version":3,"file":"static/js/582.33ebaa3a.chunk.js","mappings":"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","sources":["pages/profile-page/pages/bot-page/components/Guild.tsx","pages/profile-page/pages/bot-page/components/SelectGuild.tsx","pages/profile-page/pages/bot-page/components/ModuleButton.tsx","pages/profile-page/pages/bot-page/components/BotControlPage.tsx","pages/profile-page/pages/bot-page/BotPage.tsx"],"sourcesContent":["import {FC} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Text} from \"../../../../../components/Text\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setGuild} from \"../../../../../store/actions/botActions\";\r\n\r\nconst StyledGuildWrapper = styled.div`\r\n  margin: 20px 40px;\r\n  width: 200px;\r\n  max-height: 250px;\r\n`\r\n\r\nconst StyledGuildBox = styled.div<any>`\r\n  width: 160px;\r\n  height: 160px;\r\n  border-radius: 100%;\r\n  margin: 20px;\r\n  background-color: ${props => props.theme.colors.dark};\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-image: url(${props => props.guildIcon ? `https://cdn.discordapp.com/icons/${props.guildId}/${props.guildIcon}.png` : `https://play-lh.googleusercontent.com/0oO5sAneb9lJP6l8c6DH4aj6f85qNpplQVHmPmbbBxAukDnlO7DarDW0b-kEIHa8SQ`});\r\n\r\n  cursor: pointer;\r\n  transition: all 0.1s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nexport const Guild: FC<any> = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n        dispatch(setGuild(props.guildId))\r\n    }\r\n\r\n    return (\r\n        <StyledGuildWrapper>\r\n            <StyledGuildBox {...props} onClick={clickHandler}/>\r\n            <Text style={{textAlign: \"center\", color: \"white\", fontSize: \"12px\", fontWeight: 500}}>\r\n                {props.title}\r\n            </Text>\r\n        </StyledGuildWrapper>\r\n    )\r\n}","import {FC, useEffect, useState} from \"react\";\r\nimport {fetchGuilds} from \"../../../../../utils/api\";\r\nimport {Guild} from \"./Guild\";\r\nimport styled from \"styled-components\";\r\nimport {Loading} from \"../../../../../components/Loading\";\r\n\r\nconst GuildWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const SelectGuild:FC = () => {\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [guilds, setGuilds] = useState<Array<any>>([]);\r\n\r\n    useEffect(() => {\r\n        fetchGuilds().then((data) => {\r\n            if (!data.err){\r\n                setGuilds(data.guilds)\r\n            }\r\n            setLoad(false);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        load ? <Loading /> :\r\n            <GuildWrapper>\r\n                {guilds.map((guild, index) => <Guild key={index}\r\n                                                             guildId={guild.id}\r\n                                                             guildIcon={guild.icon}\r\n                                                             title={guild.name}/>)}\r\n            </GuildWrapper>\r\n    )\r\n}","import {FC, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Text} from \"../../../../../components/Text\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {Switch} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../../store/store\";\r\nimport {toggleModule} from \"../../../../../utils/api\";\r\n\r\ninterface Props{\r\n    title: string,\r\n    link: string,\r\n    checked?: boolean,\r\n    value: string,\r\n    canCheck: boolean\r\n}\r\n\r\nconst StyledButton = styled.div`\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.colors.grayBlack};\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const ModuleButton: FC<Props> = ({title, link, checked, value, canCheck}) => {\r\n\r\n    const guild_id = useSelector<RootState>(state => state.bot.currentGuild) as string;\r\n\r\n    const [isChecked, setCheck] = useState(checked);\r\n    const [load, setLoad] = useState(false);\r\n    const navigator = useNavigate();\r\n\r\n    const changeHandler = () => {\r\n        setLoad(true);\r\n        if (!isChecked){\r\n            toggleModule(value, guild_id, \"on_module\").then(data => {\r\n                setLoad(false);\r\n                if (!data.err){\r\n                    setCheck(true)\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            toggleModule(value, guild_id, \"off_module\").then(data => {\r\n                setLoad(false);\r\n                if (!data.err){\r\n                    setCheck(false)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <StyledButton>\r\n            <Text style={{fontSize: \"16px\", fontWeight: \"500\"}}>\r\n                {title}\r\n            </Text>\r\n            {canCheck ? <Switch checked={isChecked} onChange={changeHandler} loading={load} style={{margin: \"0 0 0 10px\"}}/> : \"\" }\r\n            <SettingOutlined style={{margin: \"0 0 0 auto\"}} onClick={() => navigator(\"/profile/\" + link)}/>\r\n        </StyledButton>\r\n    )\r\n}","import {FC, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../../store/store\";\r\nimport {fetchGuildData} from \"../../../../../utils/api\";\r\nimport {CloseCircleOutlined, LoadingOutlined, RobotOutlined, WarningOutlined} from \"@ant-design/icons\";\r\nimport {Avatar, Button, message, Result} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Text} from \"../../../../../components/Text\";\r\nimport {Guild} from \"../../../../../types/Guild\";\r\nimport {removeGuild, setGuildData} from \"../../../../../store/actions/botActions\";\r\nimport {ModuleButton} from \"./ModuleButton\";\r\nimport {Loading} from \"../../../../../components/Loading\";\r\n\r\nconst Header = styled.div`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 3px solid ${props => props.theme.colors.grayBlack}\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gad: 20px;\r\n`\r\n\r\nexport const BotControlPage: FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const guild_id = useSelector<RootState>(state => state.bot.currentGuild) as string;\r\n    const guild = useSelector<RootState>(state => state.bot.guildData) as Guild;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [addError, setAddError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (guild_id){\r\n            fetchGuildData(guild_id).then(data => {\r\n                if (data.err){\r\n                    message.error(data.message);\r\n                    setLoad(false);\r\n                }\r\n                else{\r\n                    if (data?.guild){\r\n                        dispatch(setGuildData({guild: data.guild, channels: data.channels, roles: data.roles}))\r\n                        setLoad(false);\r\n                    }\r\n                    else{\r\n                        setAddError(true);\r\n                        setLoad(false);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [guild_id])\r\n\r\n    return(\r\n        load ? <Loading /> : addError ? <Result\r\n            status=\"warning\"\r\n            title=\"Добавьте бота на ваш сервер\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={() => window.location.href = \"https://discord.com/oauth2/authorize?client_id=956507803395178549&permissions=8&scope=bot%20applications.commands\"}>\r\n                    Добавить <RobotOutlined />\r\n                </Button>\r\n            }\r\n        /> : <>\r\n\r\n            <Header>\r\n                <Avatar size={32} src={guild?.data.avatar} />\r\n                <Text style={{fontWeight: 500, fontSize: \"14px\", margin: \"0 0 0 10px\"}}>{guild?.data.name}</Text>\r\n                {guild?.options.allowed ? \"\" : <WarningOutlined style={{margin: \"0 0 0 10px\", color: \"yellow\"}}/>}\r\n                <CloseCircleOutlined style={{margin: \"0 0 0 auto\"}} onClick={() => dispatch(removeGuild())}/>\r\n            </Header>\r\n\r\n            <Buttons>\r\n                {/*<ModuleButton title=\"AntiScamLink\"*/}\r\n                {/*              value=\"antiScamLinks\"*/}\r\n                {/*              checked={guild?.options.antiScamLinks.on || false}*/}\r\n                {/*              canCheck={true}*/}\r\n                {/*              link=\"asl\"*/}\r\n                {/*/>*/}\r\n                <ModuleButton title=\"Commands\"\r\n                              value=\"commands\"\r\n                              canCheck={false}\r\n                              link=\"commands\"\r\n                />\r\n                <ModuleButton title=\"Level System\"\r\n                              value=\"levelSystem\"\r\n                              checked={guild?.options.levelSystem.on || false}\r\n                              canCheck={true}\r\n                              link=\"levels\"\r\n                />\r\n                <ModuleButton title=\"Economy System\"\r\n                              value=\"economy\"\r\n                              checked={guild?.options.economy.on || false}\r\n                              canCheck={true}\r\n                              link=\"economy\"\r\n                />\r\n                <ModuleButton title=\"Logger\"\r\n                              value=\"logger\"\r\n                              checked={guild?.options.logger.on || false}\r\n                              canCheck={true}\r\n                              link=\"logger\"\r\n                />\r\n                <ModuleButton title=\"Reaction Roles\"\r\n                              value=\"reactionRole\"\r\n                              checked={false}\r\n                              canCheck={false}\r\n                              link=\"rr\"\r\n                />\r\n                <ModuleButton title=\"Custom Commands\"\r\n                              value=\"customCommands\"\r\n                              checked={false}\r\n                              canCheck={false}\r\n                              link=\"cc\"\r\n                />\r\n            </Buttons>\r\n        </>\r\n    )\r\n}","import {FC} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../store/store\";\r\nimport {Button, Result} from \"antd\";\r\nimport { RobotOutlined } from \"@ant-design/icons\";\r\nimport config from \"../../../../config/config\";\r\nimport {SelectGuild} from \"./components/SelectGuild\";\r\nimport {BotControlPage} from \"./components/BotControlPage\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BotPageWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n \r\n  /* Track */\r\n  &::-webkit-scrollbar-track {\r\n    background: transparent;\r\n  }\r\n\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #121212;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: #070707;\r\n  }\r\n`;\r\n\r\nexport const BotPage: FC = () => {\r\n\r\n    const discord = useSelector<RootState>(state => state.auth.user.discord) as Object;\r\n    const guildId = useSelector<RootState>(state => state.bot.currentGuild);\r\n\r\n    const discordLogin = () => {\r\n        window.location.href = config.DISCORD_LOGIN_PAGE;\r\n    }\r\n\r\n    return (\r\n        Object.keys(discord || {}).length === 0 ? <Result\r\n            status=\"warning\"\r\n            title=\"Перед использованием данного функционала войдите в свой аккаунт Discord\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={discordLogin}>\r\n                    Войти <RobotOutlined />\r\n                </Button>\r\n            }\r\n        /> : <BotPageWrapper>\r\n            {\r\n                guildId ? <BotControlPage /> : <SelectGuild />\r\n            }\r\n        </BotPageWrapper>\r\n    )\r\n}"],"names":["StyledGuildWrapper","styled","StyledGuildBox","props","theme","colors","dark","guildIcon","guildId","Guild","dispatch","useDispatch","onClick","setGuild","Text","style","textAlign","color","fontSize","fontWeight","title","GuildWrapper","SelectGuild","useState","load","setLoad","guilds","setGuilds","useEffect","fetchGuilds","then","data","err","Loading","map","guild","index","id","icon","name","StyledButton","grayBlack","ModuleButton","link","checked","value","canCheck","guild_id","useSelector","state","bot","currentGuild","isChecked","setCheck","navigator","useNavigate","onChange","toggleModule","loading","margin","SettingOutlined","Header","Buttons","BotControlPage","guildData","addError","setAddError","fetchGuildData","message","setGuildData","channels","roles","status","extra","type","window","location","href","RobotOutlined","size","src","avatar","options","allowed","WarningOutlined","CloseCircleOutlined","removeGuild","levelSystem","on","economy","logger","BotPageWrapper","BotPage","discord","auth","user","Object","keys","length","config"],"sourceRoot":""}